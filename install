#!/bin/bash
# eh, run the whole thing here in debug mode. good reminder of what we're doing
set -x

case "${@[@]}" in *"nopro"*) skip_profile=1 ;; esac

# assumption: your home directory doesn't move. AUTOMOUNT WILL SCREW YOU.

# find our little file friends
# http://mywiki.wooledge.org/BashFAQ/028
if [[ -s "$BASH_SOURCE" ]] && [[ -x "$BASH_SOURCE" ]]; then
	# we found ourselves, do the needful.
	source_dir=$(dirname $(readlink -f "$BASH_SOURCE"))

    if [[ ! -z "skip_profile" ]] ; then
	# bashrc and bash_profile are the same for me, I switch on PS1...
	ln -sf "$source_dir"/bashrc "${HOME}"/.bashrc
	ln -sf "$source_dir"/bashrc "${HOME}"/.bash_profile
    fi

	# vimrc is linked, gvimrc is copied as we often have to muck with fonts
	ln -sf "$source_dir"/vimrc "${HOME}"/.vimrc
	cp "$source_dir"/gvimrc "${HOME}"/.gvimrc

	# terminalrc can also have font gripes :-)
	# create path if needed
	if [ ! -d "${HOME}/.config/Terminal" ]; then
		mkdir -p "${HOME}/.config/Terminal"
	fi
	cp "$source_dir"/terminalrc "${HOME}"/.config/Terminal/terminalrc

    if [ ! -f "${HOME}"/.gitconfig ] ; then
	# global gitconfig is a copy
	cp "$source_dir"/gitconfig "${HOME}"/.gitconfig
    fi

	# ssh_config is a copy. we also create .ssh directory if needed
	if [ ! -d "${HOME}/.ssh" ]; then
		mkdir "${HOME}/.ssh"
	fi
    if [ ! -f "${HOME}/.ssh/config" ] ; then
	cp "$source_dir"/ssh_config "${HOME}"/.ssh/config
	# fix permissions lest ssh freak out
	chmod 0600 "${HOME}"/.ssh/config
    fi

	if [ ! -d "${HOME}/.gnupg" ] ; then
		mkdir "${HOME}/.gnupg"
	fi
	cp "$source_dir"/gnupg/gpg.conf "${HOME}"/.gnupg/gpg.conf

	ln -sf "$source_dir"/Xdefaults "${HOME}"/.Xdefaults

else
	echo "sorry, you'll need to set up this system manually!"
fi
